{"version":3,"sources":["webpack:///./src/components/Offerings/index.js","webpack:///./src/components/Testimonials/index.js","webpack:///./src/components/HomePageTemplate/index.js","webpack:///./src/templates/home-page.js"],"names":["Offerings","gridItems","className","map","item","key","image","style","borderRadius","alt","src","text","Testimonials","testimonials","testimonial","id","quote","author","HomePageTemplate","title","heading","description","offerings","meta_title","meta_description","name","content","blurbs","HomePage","frontmatter","data","markdownRemark","Layout","pageQuery"],"mappings":"mJA2BeA,EAxBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAChB,yBAAKC,UAAU,wBACZD,EAAUE,KAAI,SAAAC,GAAI,OACjB,yBAAKC,IAAKD,EAAKE,MAAOJ,UAAU,cAAcK,MAAO,CAAEC,aAAc,QACnE,6BAASN,UAAU,WACjB,uBAAGA,UAAU,qBACX,yBAAKO,IAAI,GAAGC,IAAKN,EAAKE,SAExB,2BAAIF,EAAKO,aCeJC,EAvBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACnB,6BACGA,EAAaV,KAAI,SAACW,EAAaC,GAAd,OAChB,6BAASb,UAAU,UAAUG,IAAKU,GAChC,yBAAKb,UAAU,gBACZY,EAAYE,MACb,6BACA,oCAAUF,EAAYG,eC+DjBC,EAnEU,SAAC,GAAD,IACvBC,EADuB,EACvBA,MACAC,EAFuB,EAEvBA,QACAC,EAHuB,EAGvBA,YACAC,EAJuB,EAIvBA,UACAC,EALuB,EAKvBA,WACAC,EANuB,EAMvBA,iBACAX,EAPuB,EAOvBA,aAPuB,OASvB,6BACE,kBAAC,IAAD,KACE,+BAAQU,GACR,0BAAME,KAAK,cAAcC,QAASF,KAEpC,6BAAStB,UAAU,qCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,SACXiB,SAQf,6BAASjB,UAAU,6BACjB,yBAAKA,UAAU,aAEb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,6BACE,wBAAIA,UAAU,sCACXkB,GAEH,2BAAIC,IAEN,kBAAC,EAAD,CAAWpB,UAAWqB,EAAUK,SAChC,wBAAIzB,UAAU,sCAAd,gBACA,kBAAC,EAAD,CAAcW,aAAcA,Y,YClD5C,0CAgCee,UA1BE,SAAC,GAAc,IACtBC,EADqB,EAAXC,KACWC,eAArBF,YAER,OACE,kBAACG,EAAA,EAAD,KACE,kBAAC,EAAD,CACEb,MAAOU,EAAYV,MACnBI,WAAYM,EAAYN,WACxBC,iBAAkBK,EAAYL,iBAC9BJ,QAASS,EAAYT,QACrBC,YAAaQ,EAAYR,YACzBC,UAAWO,EAAYP,UACvBT,aAAcgB,EAAYhB,iBAZlC,IA4BaoB,EAAS","file":"component---src-templates-home-page-js-167dd637990c4e55cef3.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Offerings = ({ gridItems }) => (\r\n  <div className='columns is-multiline'>\r\n    {gridItems.map(item => (\r\n      <div key={item.image} className='column is-6' style={{ borderRadius: '5px' }}>\r\n        <section className='section'>\r\n          <p className='has-text-centered'>\r\n            <img alt='' src={item.image} />\r\n          </p>\r\n          <p>{item.text}</p>\r\n        </section>\r\n      </div>\r\n    ))}\r\n  </div>\r\n)\r\n\r\nOfferings.propTypes = {\r\n  gridItems: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      image: PropTypes.string,\r\n      text: PropTypes.string,\r\n    })\r\n  ),\r\n}\r\n\r\nexport default Offerings\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Testimonials = ({ testimonials }) => (\r\n  <div>\r\n    {testimonials.map((testimonial, id) => (\r\n      <article className='message' key={id}>\r\n        <div className='message-body'>\r\n          {testimonial.quote}\r\n          <br />\r\n          <cite> â€“ {testimonial.author}</cite>\r\n        </div>\r\n      </article>\r\n    ))}\r\n  </div>\r\n)\r\n\r\nTestimonials.propTypes = {\r\n  testimonials: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      quote: PropTypes.string,\r\n      author: PropTypes.string,\r\n    })\r\n  ),\r\n}\r\n\r\nexport default Testimonials\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport Offerings from '../Offerings'\r\nimport Testimonials from '../Testimonials'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst HomePageTemplate = ({\r\n  title,\r\n  heading,\r\n  description,\r\n  offerings,\r\n  meta_title,\r\n  meta_description,\r\n  testimonials,\r\n}) => (\r\n  <div>\r\n    <Helmet>\r\n      <title>{meta_title}</title>\r\n      <meta name='description' content={meta_description} />\r\n    </Helmet>\r\n    <section className='hero is-primary is-bold is-medium'>\r\n      <div className='hero-body'>\r\n        <div className='container'>\r\n          <div className='columns'>\r\n            <div className='column is-10 is-offset-1'>\r\n              <div className='section'>\r\n                <h1 className='title'>\r\n                  {title}\r\n                </h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <section className='section section--gradient'>\r\n      <div className='container'>\r\n\r\n        <div className='section'>\r\n          <div className='columns'>\r\n            <div className='column is-10 is-offset-1'>\r\n              <div className='content'>\r\n                <div>\r\n                  <h3 className='has-text-weight-semibold is-size-2'>\r\n                    {heading}\r\n                  </h3>\r\n                  <p>{description}</p>\r\n                </div>\r\n                <Offerings gridItems={offerings.blurbs} />\r\n                <h2 className='has-text-weight-semibold is-size-2'>Testimonials</h2>\r\n                <Testimonials testimonials={testimonials} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n)\r\n\r\nHomePageTemplate.propTypes = {\r\n  title: PropTypes.string,\r\n  meta_title: PropTypes.string,\r\n  meta_description: PropTypes.string,\r\n  heading: PropTypes.string,\r\n  description: PropTypes.string,\r\n  offerings: PropTypes.shape({\r\n    blurbs: PropTypes.array,\r\n  }),\r\n  testimonials: PropTypes.array,\r\n\r\n}\r\n\r\nexport default HomePageTemplate\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\nimport HomePageTemplate from '../components/HomePageTemplate'\r\nimport Layout from '../components/Layout'\r\n\r\nconst HomePage = ({ data }) => {\r\n  const { frontmatter } = data.markdownRemark\r\n\r\n  return (\r\n    <Layout>\r\n      <HomePageTemplate\r\n        title={frontmatter.title}\r\n        meta_title={frontmatter.meta_title}\r\n        meta_description={frontmatter.meta_description}\r\n        heading={frontmatter.heading}\r\n        description={frontmatter.description}\r\n        offerings={frontmatter.offerings}\r\n        testimonials={frontmatter.testimonials}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nHomePage.propTypes = {\r\n  data: PropTypes.shape({\r\n    markdownRemark: PropTypes.shape({\r\n      frontmatter: PropTypes.object,\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default HomePage\r\n\r\nexport const pageQuery = graphql`\r\n  query IndexPage($id: String!) {\r\n    markdownRemark(id: { eq: $id }) {\r\n      frontmatter {\r\n        title\r\n        meta_title\r\n        meta_description\r\n        heading\r\n        description\r\n        offerings {\r\n          blurbs {\r\n            image\r\n            text\r\n          }\r\n        }\r\n        testimonials {\r\n          author\r\n          quote\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}