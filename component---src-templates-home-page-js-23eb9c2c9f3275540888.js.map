{"version":3,"sources":["webpack:///./src/components/Offerings/index.js","webpack:///./src/components/HomePageTemplate/index.js","webpack:///./src/templates/home-page.js"],"names":["Offerings","gridItems","className","map","item","key","image","style","borderRadius","dangerouslySetInnerHTML","__html","text","HomePageTemplate","title","heading","description","offerings","heading_ts","ts","heading_why","why","meta_title","meta_description","name","content","blurbs","HomePage","frontmatter","data","markdownRemark","Layout","pageQuery"],"mappings":"mJA2BeA,EAxBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OAChB,yBAAKC,UAAU,wBACZD,EAAUE,KAAI,SAAAC,GAAI,OACjB,yBAAKC,IAAKD,EAAKE,MAAOJ,UAAU,cAAcK,MAAO,CAAEC,aAAc,QACnE,6BAASN,UAAU,WAIjB,2BAAG,yBAAKO,wBAAyB,CAAEC,OAAQN,EAAKO,gBC8E3CC,EAnFU,SAAC,GAAD,IACvBC,EADuB,EACvBA,MACAC,EAFuB,EAEvBA,QACAC,EAHuB,EAGvBA,YACAC,EAJuB,EAIvBA,UACAC,EALuB,EAKvBA,WACAC,EANuB,EAMvBA,GACAC,EAPuB,EAOvBA,YACAC,EARuB,EAQvBA,IACAC,EATuB,EASvBA,WACAC,EAVuB,EAUvBA,iBAVuB,OAavB,6BACE,kBAAC,IAAD,KACE,+BAAQD,GACR,0BAAME,KAAK,cAAcC,QAASF,KAEpC,6BAASpB,UAAU,qCACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,SACZ,yBAAKO,wBAAyB,CAAEC,OAAQG,YAQtD,6BAASX,UAAU,6BACjB,yBAAKA,UAAU,aAEb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,6BACE,wBAAIA,UAAU,sCACXY,GAEH,2BAAIC,IAEN,kBAAC,EAAD,CAAWd,UAAWe,EAAUS,SAChC,6BACE,wBAAIvB,UAAU,sCACXe,IAGL,kBAAC,EAAD,CAAWhB,UAAWiB,EAAGO,SACzB,6BACE,wBAAIvB,UAAU,sCACXiB,IAGL,kBAAC,EAAD,CAAWlB,UAAWmB,EAAIK,iB,YChE1C,0CAoCeC,UA9BE,SAAC,GAAc,IACtBC,EADqB,EAAXC,KACWC,eAArBF,YAER,OACE,kBAACG,EAAA,EAAD,KACE,kBAAC,EAAD,CACEjB,MAAOc,EAAYd,MACnBQ,WAAYM,EAAYN,WACxBC,iBAAkBK,EAAYL,iBAC9BR,QAASa,EAAYb,QACrBC,YAAaY,EAAYZ,YACzBC,UAAWW,EAAYX,UACvBC,WAAYU,EAAYV,WACxBC,GAAIS,EAAYT,GAChBC,YAAaQ,EAAYR,YACzBC,IAAKO,EAAYP,QAfzB,IAgCaW,EAAS","file":"component---src-templates-home-page-js-23eb9c2c9f3275540888.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Offerings = ({ gridItems }) => (\n  <div className='columns is-multiline'>\n    {gridItems.map(item => (\n      <div key={item.image} className='column is-6' style={{ borderRadius: '5px' }}>\n        <section className='section'>\n          {/* <p className='has-text-centered'>\n            <img alt='' src={item.image} />\n          </p> */}\n          <p><div dangerouslySetInnerHTML={{ __html: item.text }} /></p>\n        </section>\n      </div>\n    ))}\n  </div>\n)\n\nOfferings.propTypes = {\n  gridItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.string,\n      text: PropTypes.string,\n    })\n  ),\n}\n\nexport default Offerings\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport Offerings from '../Offerings'\nimport Testimonials from '../Testimonials'\nimport PropTypes from 'prop-types'\n\nconst HomePageTemplate = ({\n  title,\n  heading,\n  description,\n  offerings,\n  heading_ts,\n  ts,\n  heading_why,\n  why,\n  meta_title,\n  meta_description,\n  // testimonials,\n}) => (\n  <div>\n    <Helmet>\n      <title>{meta_title}</title>\n      <meta name='description' content={meta_description} />\n    </Helmet>\n    <section className='hero is-primary is-bold is-medium'>\n      <div className='hero-body'>\n        <div className='container'>\n          <div className='columns'>\n            <div className='column is-10 is-offset-1'>\n              <div className='section'>\n                <h1 className='title'>\n                  <div dangerouslySetInnerHTML={{ __html: title }} />\n                </h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <section className='section section--gradient'>\n      <div className='container'>\n\n        <div className='section'>\n          <div className='columns'>\n            <div className='column is-10 is-offset-1'>\n              <div className='content'>\n                <div>\n                  <h3 className='has-text-weight-semibold is-size-2'>\n                    {heading}\n                  </h3>\n                  <p>{description}</p>\n                </div>\n                <Offerings gridItems={offerings.blurbs} />\n                <div>\n                  <h3 className='has-text-weight-semibold is-size-2'>\n                    {heading_ts}\n                  </h3>\n                </div>\n                <Offerings gridItems={ts.blurbs} />\n                <div>\n                  <h3 className='has-text-weight-semibold is-size-2'>\n                    {heading_why}\n                  </h3>\n                </div>\n                <Offerings gridItems={why.blurbs} />\n                {/* <h2 className='has-text-weight-semibold is-size-2'>Testimonials</h2> */}\n                {/* <Testimonials testimonials={testimonials} /> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n)\n\nHomePageTemplate.propTypes = {\n  title: PropTypes.string,\n  meta_title: PropTypes.string,\n  meta_description: PropTypes.string,\n  heading: PropTypes.string,\n  description: PropTypes.string,\n  offerings: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n  testimonials: PropTypes.array,\n\n}\n\nexport default HomePageTemplate\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport HomePageTemplate from '../components/HomePageTemplate'\nimport Layout from '../components/Layout'\n\nconst HomePage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark\n\n  return (\n    <Layout>\n      <HomePageTemplate\n        title={frontmatter.title}\n        meta_title={frontmatter.meta_title}\n        meta_description={frontmatter.meta_description}\n        heading={frontmatter.heading}\n        description={frontmatter.description}\n        offerings={frontmatter.offerings}\n        heading_ts={frontmatter.heading_ts}\n        ts={frontmatter.ts}\n        heading_why={frontmatter.heading_why}\n        why={frontmatter.why}\n        // testimonials={frontmatter.testimonials}\n      />\n    </Layout>\n  )\n}\n\nHomePage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default HomePage\n\nexport const pageQuery = graphql`\n  query IndexPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        meta_title\n        meta_description\n        heading\n        description\n        offerings {\n          blurbs {\n            image\n            text\n          }\n        }\n        heading_ts\n        ts {\n          blurbs {\n            image\n            text\n          }\n        }\n        heading_why\n        why {\n          blurbs {\n            image\n            text\n          }\n        }\n      }\n    }\n  }\n`\n        // testimonials {\n        //   author\n        //   quote\n        // }\n"],"sourceRoot":""}